package paml.util.transferguardwsclient.gen;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.0
 * 2014-01-09T17:12:19.359-08:00
 * Generated source version: 2.7.0
 * 
 */
@WebServiceClient(name = "TransferService", 
                  wsdlLocation = "file:/C:/workspaces/workspace-kepler/TransferGuardWsClient/src/main/resources/wsdl/TransferService.wsdl",
                  targetNamespace = "http://hl7.paml.com/ws/") 
public class TransferService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://hl7.paml.com/ws/", "TransferService");
    public final static QName TransferGuardEndpoint = new QName("http://hl7.paml.com/ws/", "TransferGuardEndpoint");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/workspaces/workspace-kepler/TransferGuardWsClient/src/main/resources/wsdl/TransferService.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(TransferService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/workspaces/workspace-kepler/TransferGuardWsClient/src/main/resources/wsdl/TransferService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public TransferService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public TransferService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TransferService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public TransferService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public TransferService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public TransferService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns ITransferService
     */
    @WebEndpoint(name = "TransferGuardEndpoint")
    public ITransferService getTransferGuardEndpoint() {
        return super.getPort(TransferGuardEndpoint, ITransferService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ITransferService
     */
    @WebEndpoint(name = "TransferGuardEndpoint")
    public ITransferService getTransferGuardEndpoint(WebServiceFeature... features) {
        return super.getPort(TransferGuardEndpoint, ITransferService.class, features);
    }

}
